# -*- coding: utf-8 -*-
"""Introdução a Machine Learning Classificação - 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12XtVZNOtQ30rnLj4TZHA7rTCfipa8Lfr
"""

import pandas as pd

uri = "https://gist.githubusercontent.com/guilhermesilveira/2d2efa37d66b6c84a722ea627a897ced/raw/10968b997d885cbded1c92938c7a9912ba41c615/tracking.csv"
dados = pd.read_csv(uri)
dados.head()

mapa = {
    "home" : "principal",
    "how_it_works" : "como_funciona",
    "contact" : "contato",
    "bought" : "comprou"
}

dados = dados.rename(columns = mapa)

x = dados[["principal","como_funciona","contato"]]
y = dados[["comprou"]]
x.head()

#Separar o treino do teste
treino_x = x[:75]
treino_y = y[:75]

teste_x = x[75:]
teste_y = y[75:]
print("Treinaremos com %d e faremos o teste com %d" % (len(treino_x), len(teste_x)))

from sklearn.svm import LinearSVC
from sklearn.metrics import accuracy_score

modelo = LinearSVC()
modelo.fit(treino_x, treino_y)

#análise do modelo
previsao = modelo.predict(teste_x)

acuracia = accuracy_score(teste_y, previsao) * 100
print("Acurácia foi de %.2f%%" % acuracia)



"""#usando a biblioteca do sklearn para separar treino e teste"""

from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC
from sklearn.metrics import accuracy_score

SEED = 20

treino_x, teste_x, treino_y, teste_y = train_test_split(x, y, random_state = SEED, test_size = 0.25, stratify = y)

modelo = LinearSVC()
modelo.fit(treino_x, treino_y)

#análise do modelo
previsao = modelo.predict(teste_x) 

acuracia = accuracy_score(teste_y, previsao) * 100
print("Acurácia foi de %.2f%%" % acuracia)

